

Keywords: 


Linux Administraion 
Windows
Jenkins 
Maven 
Ansible 
Docker 
Kubetnetes 
Terraform 
ArgoCD 
Prometheus 
Grafana 
Nagios 
CICD 
SonarQube 
Image Scan - Trivy 
Shell / bash Scripting 
Python Scripting 
SERVICE NOW,
JIRA 
Git & 
GIT  Branching Strategy supports agile based microservices developement 

AWS Services -- EC2, ASG , ELB , EBS , EFS , S3, LAMDA, CloudWatch, RDS, SNS, CloudFront, Route53 ,IAM, AMI,  EKS, VPC , WAF, CDN   ..etc

Excelent Communication skills & Documentation skills 

- Shift left -  Reducing some percentage of defects in qa and prod 
- DevSecOps : Reducing security related issues in some percentage 
- Build once and Run anywhere: improved build process with more reliability 
- GIT  Branching Strategy - supports agile based microservices developement 
- Infra as a code : developed modules to achive consistent infra, useed workspaces for multiple environments 
-Managed infrastructure as code (IaC) using  Terraform to ensure consistency across environments.
- Project Onboarding 
- Project Maintenance 
- Project improvemetns 
- Project changes 
- Project Upgrades 
- Designed and implemented cicd for applications ,ensured high availability, scalability, and security for cloud-based environments with zero downtime 
- Implemented security best practices 
- Followd Docker image optimization with multi stage docker file 
- Micro services Implemented 
- streamlined project workflows, setup ci cd ,  Deployment strategie ( blue -green ) 
- production support / on call support 
- DOCUMENTAION on Confluence 
- DevSecOps 
- Strong problem-solving skills with a focus on cost reduction, security improvements, and workflow optimization. Proficient in managing environments such as Dev, QA, UAT, and Production to ensure reliable deployments and smooth operations.

- Ensured operational continuity by conducting regular daily and weekly system checks and backups, leading to a 100% up-time and data integrity across critical systems
- Fully Automated build & deployment using Jenkins to reduce human error,  Creating CI/CD pipelines by integrating Git, GitHub, 
Jenkins, Ansible, Docker, Kubernetes - speed up production process.

- provisioned AWS Cloud Infra structure using Terraform , configured using Ansible 
- Cloud Migration 
- Experinece with both on prem and cloud platforms 
- Strong experienced in Linux administration, 
- Design , setup and maintain observability solutions 
- Led successful migration of On Premises infra to AWS Cloud , ensuring minimal downtime



========================================
KEYTHINGS TO CROSS CHECK :

1.  AWS  RELATED SERVICES -- EC2, ASG , SLB , SBS , EFS , S3, LAMDA, CloudWatch, RDS, SNS, CloudFront, Route53 ,IAM, AMI,  EKS, VPC, SUBNET, SECURITY GROUP , NACL , WAF   ..etc


2. GIT , GIT 
3. JENKINS , MAVEN ,SONARQUBE , GITHUB, TRIVY 
4. DOCKER , K8S , 
5. ARGO CD 
6. ANSIBLE 
7. TERRAFORM 
8. MONITORING & OBSERVABILITY -- CLOUDWATCH , PROMETHEUS , GRAFANA , DYNATRACE , NAGIOS, KIBANA 
9. LINUX WINDOWS 
10. BASH , PYTHON SCRIPT 
11. SERVICE NOW , JIRA 
12. SDLC - AGILE 
14. KEYWORDS : COST OPTIMIZATION ,Docker image optimization ,  SECURITY BEST PRACTICES , END -END AUTOMATION , DOCUMENTAION , streamlined project workflows, CI CD , troubleshooting ,log rotation , 
15. micro services Implemented 
16. Deployment strategies ( blue -green , canery , rolling update) 
17. production support / on call support 
18 Documentation work 
19 Shift left Approach 
20 Dev Sec Ops 

========================================

Naming convention for Resume 
ATS SCORE 
=============================================


resumeworded 
nxtjob resume 
canva
enhncev 
   
================================================================


My Certifications are:
   Aws cloud practicionar
   Certified Kubernetes administrator
   
My Education :
   BE from Vasavai college of Engineerign 2010 
   
   

=============================================================================
Key Features for ATS Optimization:

Simple Formatting:
    clean, linear format 
    No fancy designs, images, 
    Use standard fonts

Proper Use of Keywords:
    Add specific skills, tools, and technologies ( AWS, Kubernetes, Terraform, Jenkins, Docker, ) and 
    Industry-standard terms (e.g., CI/CD pipelines, DevSecOps, microservices) 
    
Section Headers:
   Career Objective
   Professional Summary
   Technical Skills
   Professional Experience
   Certifications 
   Education


Bullet Points
   Bullet points with concise, STAR ( Situaltion , Task , Action , Result ) format 


No Graphics or Tables
Avoid Headers/Footers

STAR ( Situaltion , Task , Action , Result ) - Quantifiable metrics whre ever applicable

Quantify at least 50-60% of the bullet points
Use strong action verbs

Bold the important keywords.

Consistent Use of Keywords
Do Not Repeat 
Prepare in just 1-2 pages (Max 3 Pages) 
Dont expect 100% ATS Score ( > 50 % is fair enough) 



=========================================


=========

STAR ( Situaltion , Task , Action , Result ) 
=======================================




Summary:
Summary of your work profile.
Experience in number of years and months.
Highlight your job role.
Keywords related to your job profile.
Few quantifiable metrics if applicable.

Skills:
Tables might not get formatted properly.
Use bullet points or comma-separated lists.
Bold the important keywords.

Experience:
Previous experience in reverse chronological order.
Include:Job designation.Company name.Client name (if applicable).
Duration in month and year format.
Bullet Points:
Use the STAR format:
  Situation
  Task
  Action
  Result
Quantify at least 60-70% of the bullet points.
Start with a strong action verb.
Highlight keywords using bold format.

Certifications
Showcase certifications with badges.
Add only relevant certifications.

Education
Add you Highest qualification only.
Year of passing to be add 
No need to mention GPA (only if it is really good).

Projects:
Follow the same pattern from work experience 

Important Points to Note:
No spell error, grammatical error, punctuation error
Should not be too long
Date formats should be consistent
Avoid including unnecessary personal details like marital status


Avoid repetitive phrases or bullet points
Formatting should be consistent
Avoid too many colours, or graphical icons
Avoid fancy fonts, and stick to standard business fonts
